data(y_pred_lpm, y_true)
library(pROC)
roc(y_true ~ y_prob_log)
roc(y_true ~ y_prob_lpm)
mod2 <- lm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city,
data = mroz)
y_true <- mod1$data$inlf
y_prob_log <- predict(mod.log, type = 'response')
y_prob_lpm <- predict(mod2)
y_pred_log <- ifelse(y_prob_log > 0.5, 1, 0)
y_pred_lpm <- ifelse(y_prob_lpm > 0.5, 1, 0)
data <- function(y_pred, y_true) {
cm <- table(y_pred, y_true)
tp <- cm[2,2]
tn <- cm[1,1]
fp <- cm[2,1]
fn <- cm[1,2]
precision <- tp / (tp + fp)
recall <- tp / (tp + fn)
f1 <- 2 * ((precision * recall ) / (precision + recall))
accuracy <- (tp + tn) / (tp + tn + fp + fn)
return(list(f1, accuracy))
}
data(y_pred_log, y_true)
data(y_pred_lpm, y_true)
library(pROC)
roc(y_true ~ y_prob_log)
roc(y_true ~ y_prob_lpm)
mod2 <- lm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city,
data = mroz)
actual <- mod1$data$inlf
y_prob_log <- predict(mod.log, type = 'response')
y_prob_lpm <- predict(mod2)
y_pred_log <- ifelse(y_prob_log > 0.5, 1, 0)
y_pred_lpm <- ifelse(y_prob_lpm > 0.5, 1, 0)
data <- function(predicted, actual) {
cm <- table(predicted, actual)
tp <- cm[2,2]
tn <- cm[1,1]
fp <- cm[2,1]
fn <- cm[1,2]
precision <- tp / (tp + fp)
recall <- tp / (tp + fn)
f1 <- 2 * ((precision * recall ) / (precision + recall))
accuracy <- (tp + tn) / (tp + tn + fp + fn)
return(list(f1, accuracy))
}
data(y_pred_log, y_true)
data(y_pred_lpm, y_true)
library(pROC)
roc(y_true ~ y_prob_log)
roc(y_true ~ y_prob_lpm)
mod2 <- lm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city, data = mroz)
actual <- mod1$data$inlf
y_prob_log <- predict(mod.log, type = 'response')
y_prob_lpm <- predict(mod2)
y_pred_log <- ifelse(y_prob_log > 0.5, 1, 0)
y_pred_lpm <- ifelse(y_prob_lpm > 0.5, 1, 0)
data <- function(predicted, actual) {
cm <- table(predicted, actual)
tp <- cm[2,2]
tn <- cm[1,1]
fp <- cm[2,1]
fn <- cm[1,2]
precision <- tp / (tp + fp)
recall <- tp / (tp + fn)
f1 <- 2 * ((precision * recall ) / (precision + recall))
accuracy <- (tp + tn) / (tp + tn + fp + fn)
return(list(f1, accuracy))
}
data(y_pred_log, actual)
data(y_pred_lpm, actual)
library(pROC)
roc(y_true ~ y_prob_log)
roc(y_true ~ y_prob_lpm)
mod2 <- lm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city, data = mroz)
actual <- mod1$data$inlf
y_prob_log <- predict(mod.log, type = 'response')
y_prob_lpm <- predict(mod2)
y_pred_log <- ifelse(y_prob_log > 0.5, 1, 0)
y_pred_lpm <- ifelse(y_prob_lpm > 0.5, 1, 0)
data <- function(predicted, actual) {
cm <- table(predicted, actual)
tp <- cm[2,2]
tn <- cm[1,1]
fp <- cm[2,1]
fn <- cm[1,2]
precision <- tp / (tp + fp)
recall <- tp / (tp + fn)
f1 <- 2 * ((precision * recall ) / (precision + recall))
accuracy <- (tp + tn) / (tp + tn + fp + fn)
return(list(f1, accuracy))
}
data(y_pred_log, actual)
data(y_pred_lpm, actual)
library(pROC)
roc(actual ~ y_prob_log)
roc(actual ~ y_prob_lpm)
mod2 <- lm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city, data = mroz)
actual <- mod1$data$inlf
y_prob_log <- predict(mod.log, type = 'response')
y_prob_lpm <- predict(mod2)
y_pred_log <- ifelse(y_prob_log > 0.25, 1, 0)
y_pred_lpm <- ifelse(y_prob_lpm > 0.25, 1, 0)
data <- function(predicted, actual) {
cm <- table(predicted, actual)
tp <- cm[2,2]
tn <- cm[1,1]
fp <- cm[2,1]
fn <- cm[1,2]
precision <- tp / (tp + fp)
recall <- tp / (tp + fn)
f1 <- 2 * ((precision * recall ) / (precision + recall))
accuracy <- (tp + tn) / (tp + tn + fp + fn)
return(list(f1, accuracy))
}
data(y_pred_log, actual)
data(y_pred_lpm, actual)
library(pROC)
roc(actual ~ y_prob_log)
roc(actual ~ y_prob_lpm)
mod2 <- lm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city, data = mroz)
actual <- mod1$data$inlf
y_prob_log <- predict(mod.log, type = 'response')
y_prob_lpm <- predict(mod2)
y_pred_log <- ifelse(y_prob_log > 0.5, 1, 0)
y_pred_lpm <- ifelse(y_prob_lpm > 0.5, 1, 0)
data <- function(predicted, actual) {
cm <- table(predicted, actual)
tp <- cm[2,2]
tn <- cm[1,1]
fp <- cm[2,1]
fn <- cm[1,2]
precision <- tp / (tp + fp)
recall <- tp / (tp + fn)
f1 <- 2 * ((precision * recall ) / (precision + recall))
accuracy <- (tp + tn) / (tp + tn + fp + fn)
return(list(f1, accuracy))
}
data(y_pred_log, actual)
data(y_pred_lpm, actual)
library(pROC)
roc(actual ~ y_prob_log)
roc(actual ~ y_prob_lpm)
mod2 <- lm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city, data = mroz)
actual <- mod1$data$inlf
problog <- predict(mod.log, type = 'response')
problpm <- predict(mod2)
logpred <- ifelse(problog > 0.5, 1, 0)
lpmpred <- ifelse(promlpm > 0.5, 1, 0)
mod2 <- lm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city, data = mroz)
actual <- mod1$data$inlf
problog <- predict(mod.log, type = 'response')
problpm <- predict(mod2)
logpred <- ifelse(problog > 0.5, 1, 0)
lpmpred <- ifelse(problpm > 0.5, 1, 0)
data <- function(predicted, actual) {
cm <- table(predicted, actual)
tp <- cm[2,2]
tn <- cm[1,1]
fp <- cm[2,1]
fn <- cm[1,2]
precision <- tp / (tp + fp)
recall <- tp / (tp + fn)
f1 <- 2 * ((precision * recall ) / (precision + recall))
accuracy <- (tp + tn) / (tp + tn + fp + fn)
return(list(f1, accuracy))
}
data(logpred, actual)
data(lpmpred, actual)
library(pROC)
roc(actual ~ y_prob_log)
roc(actual ~ y_prob_lpm)
mod2 <- lm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city, data = mroz)
actual <- mod1$data$inlf
problog <- predict(mod.log, type = 'response')
problpm <- predict(mod2)
predictedlog <- ifelse(problog > 0.5, 1, 0)
predictedglm <- ifelse(problpm > 0.5, 1, 0)
data <- function(predicted, actual) {
cm <- table(predicted, actual)
tp <- cm[2,2]
tn <- cm[1,1]
fp <- cm[2,1]
fn <- cm[1,2]
precision <- tp / (tp + fp)
recall <- tp / (tp + fn)
f1 <- 2 * ((precision * recall ) / (precision + recall))
accuracy <- (tp + tn) / (tp + tn + fp + fn)
return(list(f1, accuracy))
}
data(predictedlog, actual)
data(predictedglm, actual)
library(pROC)
roc(actual ~ y_prob_log)
roc(actual ~ y_prob_lpm)
mod2 <- lm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city, data = mroz)
actual <- mod1$data$inlf
problog <- predict(mod.log, type = 'response')
probglm <- predict(mod2)
predictedlog <- ifelse(problog > 0.5, 1, 0)
predictedglm <- ifelse(problpm > 0.5, 1, 0)
data <- function(predicted, actual) {
cm <- table(predicted, actual)
tp <- cm[2,2]
tn <- cm[1,1]
fp <- cm[2,1]
fn <- cm[1,2]
precision <- tp / (tp + fp)
recall <- tp / (tp + fn)
f1 <- 2 * ((precision * recall ) / (precision + recall))
accuracy <- (tp + tn) / (tp + tn + fp + fn)
return(list(f1, accuracy))
}
data(predictedlog, actual)
data(predictedglm, actual)
library(pROC)
roc(actual ~ problog)
roc(actual ~ probglm)
library(wooldridge)
library(dplyr)
data(mroz)
library(wooldridge)
library(dplyr)
data(mroz)
mod2 <- lm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city, data = mroz)
actual <- mod1$data$inlf
problog <- predict(mod.log, type = 'response')
probglm <- predict(mod2)
predictedlog <- ifelse(problog > 0.5, 1, 0)
predictedglm <- ifelse(problpm > 0.5, 1, 0)
data <- function(predicted, actual) {
cm <- table(predicted, actual)
tp <- cm[2,2]
tn <- cm[1,1]
fp <- cm[2,1]
fn <- cm[1,2]
precision <- tp / (tp + fp)
recall <- tp / (tp + fn)
f1 <- 2 * ((precision * recall ) / (precision + recall))
accuracy <- (tp + tn) / (tp + tn + fp + fn)
return(list(f1, accuracy))
}
data(predictedlog, actual)
data(predictedglm, actual)
roc(actual ~ problog)
roc(actual ~ probglm)
library(wooldridge)
library(dplyr)
data(mroz)
library(wooldridge)
library(dplyr)
data(mroz)
library(wooldridge)
library(dplyr)
mod1 <- glm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city, data = mroz, family = binomial)
summary(mod1)
medianval <- mroz %>%
apply(FUN = median, MARGIN = 2) |>
t() |> as.data.frame() |>
select(c(educ, exper, age, kidslt6, kidsge6, nwifeinc, city))
plf <- predict(mod1, newdata = medianval, type = 'response', na.rm = TRUE)
plf
medianval_exper_plus1$exper <- medianval$exper + 1
plfplusone <- predict(mod1, newdata = medianval_exper_plus1, type = 'response')
plfplusone
odds_plf <- plf / (1 - plf)
oddsplf1 <- plfplusone / (1 - plfplusone)
odds_ratio <- oddsplf1 / odds_plf
odds_ratio
coexper <- coef(mod1)["exper"]
comp <- exp(coexper)
comp
cokids <- coef(mod1)["kidslt6"]
cokids
exp(-1.439754)
library(wooldridge)
library(dplyr)
mod1 <- glm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city, data = mroz, family = binomial)
summary(mod1)
medianval <- mroz %>%
apply(FUN = median, MARGIN = 2) |>
t() |> as.data.frame() |>
select(c(educ, exper, age, kidslt6, kidsge6, nwifeinc, city))
plf <- predict(mod1, newdata = medianval, type = 'response', na.rm = TRUE)
plf
medianval_exper_plus1 <- medianval_exper_plus1$expe
medianval_exper_plus1$exper <- medianval$exper + 1
plfplusone <- predict(mod1, newdata = medianval_exper_plus1, type = 'response')
library(wooldridge)
library(dplyr)
mod1 <- glm(inlf ~ educ + exper + age + kidslt6 + kidsge6 + nwifeinc + city, data = mroz, family = binomial)
summary(mod1)
medianval <- mroz %>%
apply(FUN = median, MARGIN = 2) |>
t() |> as.data.frame() |>
select(c(educ, exper, age, kidslt6, kidsge6, nwifeinc, city))
plf <- predict(mod1, newdata = medianval, type = 'response', na.rm = TRUE)
plf
medianval_exper_plus1$exper <- medianval$exper + 1
plfplusone <- predict(mod1, newdata = medianval_exper_plus1, type = 'response')
library(wooldridge)
library(dplyr)
data(mroz)
setwd("~/Desktop/MyDashboard")
# deliverable 2 ----------------------------------------------------------
linkMass="https://github.com/DACSS-Visual/tabular_bivar_catcat/raw/refs/heads/main/data/MSP%20DFS%20Arrests%2019-20Q1.xlsx"
library(rio)
arrests=rio::import(linkMass,which = 1)
head(arrests)
names(arrests)
(PrecintDaytime=table(arrests$`Arrest Offense by UCR Code`,arrests$Race))
library(magrittr) # for %>%
(mgCol=prop.table(PrecintDaytime,
margin = 2)%>%round(.,3))
mgCol
PrecDaytiDF=as.data.frame(PrecintDaytime)
names(PrecDaytiDF)=c("ucr","race","counts")
PrecDaytiDF$pctCol=100*as.data.frame(mgCol)[,3]
PrecDaytiDF
library(ggplot2)
base4 = ggplot(PrecDaytiDF, aes(x = ucr, y = pctCol ) )
#the bars
baseRE  = ggplot(PrecDaytiDF,
aes(x = reorder(ucr, pctCol), #here
y = pctCol ) ) + theme_minimal()
barsRE = baseRE + geom_bar( stat = "identity" )
Base = barsRE + facet_grid( ~ race)
Base = Base + coord_flip()
del2Draft = Base + theme(axis.text.y = element_text(size=7,angle = 20)) +
geom_text(aes(label=ifelse(pctCol>5,# condition to annotate
pctCol,"")),
nudge_y = 4) +
labs(title= "Frequency of MA State Police Arrest Offense UCR Codes by Race",
subtitle = "From January 2019 to March 2020",
caption = "Arrest information from the Field Services and Investigative divisions",
x="",y="%")
del2Draft
readRDS("del2Draft.rds")
# save del2Draft ----------------------------------------------------------
saveRDS(del2Draft, file = "del2Draft.rds")
mgCol
names(mgcol)
names(mgCol)
names(arrests)
library(rio)
arrests=rio::import(linkMass,which = 1)
head(arrests)
names(arrests)
(Coderace=table(arrests$`Arrest Offense by UCR Code`,arrests$Race))
library(magrittr) # for %>%
(mgCol=prop.table(Coderace,
margin = 2)%>%round(.,3))
mgCol
PrecDaytiDF=as.data.frame(Coderace)
names(PrecDaytiDF)=c("ucr","race","counts")
PrecDaytiDF$pctCol=100*as.data.frame(mgCol)[,3]
PrecDaytiDF
library(ggplot2)
base4 = ggplot(PrecDaytiDF, aes(x = ucr, y = pctCol ) )
#the bars
baseRE  = ggplot(PrecDaytiDF,
aes(x = reorder(ucr, pctCol), #here
y = pctCol ) ) + theme_minimal()
barsRE = baseRE + geom_bar( stat = "identity" )
Base = barsRE + facet_grid( ~ race)
Base = Base + coord_flip()
del2Draft = Base + theme(axis.text.y = element_text(size=7,angle = 20)) +
geom_text(aes(label=ifelse(pctCol>5,# condition to annotate
pctCol,"")),
nudge_y = 4) +
labs(title= "Frequency of MA State Police Arrest Offense UCR Codes by Race",
subtitle = "From January 2019 to March 2020",
caption = "Arrest information from the Field Services and Investigative divisions",
x="",y="%")
del2Draft
readRDS("del2Draft.rds")
# save del2Draft ----------------------------------------------------------
saveRDS(del2Draft, file = "del2Draft.rds")
baseRE  = ggplot(PrecDaytiDF,
aes(x = reorder(ucr, pctCol), #here
y = pctCol ) ) + theme_minimal()
barsRE = baseRE + geom_bar( stat = "identity" )
Base = barsRE + facet_grid( ~ race)
Base = Base + coord_flip()
del2Draft = Base + theme(axis.text.y = element_text(size=7,angle = 20)) +
geom_text(aes(label=ifelse(pctCol>5,# condition to annotate
pctCol,"")),
nudge_y = 4) +
labs(title= "Frequency of MA State Police Arrest Offense UCR Codes by Race",
subtitle = "From January 2019 to March 2020",
caption = "Arrest information from the Field Services and Investigative divisions",
x="",y="Percent (%)")
del2Draft
readRDS("del2Draft.rds")
# save del2Draft ----------------------------------------------------------
saveRDS(del2Draft, file = "del2Draft.rds")
del2Draft = Base + theme(axis.text.y = element_text(size=7,angle = 20)) +
geom_text(aes(label=ifelse(pctCol>5,# condition to annotate
pctCol,"")),
nudge_y = 4) +
labs(title= "Frequency of MA State Police Arrest Offense UCR Codes by Race",
subtitle = "From January 2019 to March 2020",
caption = "Arrest information from the Field Services and Investigative divisions",
x="",y="Percent (%)")
del2Draft
readRDS("del2Draft.rds")
# save del2Draft ----------------------------------------------------------
saveRDS(del2Draft, file = "del2Draft.rds")
library(flexdashboard) # always
readRDS("~/Desktop/MyDashboard/del2Draft.rds")
library(ggplot2)
baseRE  = ggplot(PrecDaytiDF,
aes(x = reorder(ucr, pctCol), #here
y = pctCol ) ) + theme_minimal()
barsRE = baseRE + geom_bar( stat = "identity" )
Base = barsRE + facet_grid( ~ race)
Base = Base + coord_flip()
del2Draft = Base + theme(axis.text.y = element_text(size=7,angle = 20)) +
geom_text(aes(label=ifelse(pctCol>5,# condition to annotate
pctCol,"")),
nudge_y = 4) +
labs(title= "Frequency of MA State Police Arrest Offense UCR Codes by Race",
subtitle = "From January 2019 to March 2020",
caption = "Source : Mass.gov",
x="",y="Percent (%)")
del2Draft
readRDS("del2Draft.rds")
# save del2Draft ----------------------------------------------------------
saveRDS(del2Draft, file = "del2Draft.rds")
readRDS("~/Desktop/MyDashboard/del2Draft.rds")
readRDS("~/Desktop/MyDashboard/del2Draft.rds")
arrests=rio::import(linkMass,which = 1)
head(arrests)
names(arrests)
(Coderace=table(arrests$`Arrest Offense by UCR Code`,arrests$Race))
library(magrittr) # for %>%
(mgCol=prop.table(Coderace,
margin = 2)%>%round(.,3))
mgCol
Racedf=as.data.frame(Coderace)
names(Racedf)=c("ucr","race","counts")
Racedf$pctCol=100*as.data.frame(mgCol)[,3]
Racedf
library(ggplot2)
baseRE  = ggplot(Racedf,
aes(x = reorder(ucr, pctCol), #here
y = pctCol ) ) + theme_minimal()
barsRE = baseRE + geom_bar( stat = "identity" )
Base = barsRE + facet_grid( ~ race)
Base = Base + coord_flip()
del2Draft = Base + theme(axis.text.y = element_text(size=7,angle = 20)) +
geom_text(aes(label=ifelse(pctCol>5,# condition to annotate
pctCol,"")),
nudge_y = 4) +
labs(title= "Frequency of MA State Police Arrest Offense UCR Codes by Race",
subtitle = "From January 2019 to March 2020",
caption = "Source : Mass.gov",
x="",y="Percent (%)")
del2Draft
readRDS("del2Draft.rds")
# save del2Draft ----------------------------------------------------------
saveRDS(del2Draft, file = "del2Draft.rds")
readRDS("~/Desktop/MyDashboard/del2Draft.rds")
del2Draft = Base + theme(axis.text.y = element_text(size=7,angle = 20)) +
geom_text(aes(label=ifelse(pctCol>5,# condition to annotate
pctCol,"")),
nudge_y = 4) +
labs(title= "Frequency of MA State Police Arrest Offense UCR Codes by Race",
subtitle = "Frequency of MA State Police Arrest Offense UCR Codes by Race from January 2019 to March 2020",
caption = "Source : Mass.gov",
x="",y="Percent (%)")
del2Draft
del2Draft= base + geom_histogram(aes(x=Student.Teacher.Ratio))
del2Draft
library(ggplot2)
baseRE  = ggplot(Racedf,
aes(x = reorder(ucr, pctCol), #here
y = pctCol ) ) + theme_minimal()
barsRE = baseRE + geom_bar( stat = "identity" )
Base = barsRE + facet_grid( ~ race)
Base = Base + coord_flip()
del2Draft = Base + theme(axis.text.y = element_text(size=7,angle = 20)) +
geom_text(aes(label=ifelse(pctCol>5,# condition to annotate
pctCol,"")),
nudge_y = 4) +
labs(title= "MV : Most Common UCR Code among all Races",
subtitle = "Frequency of MA State Police Arrest Offense UCR Codes by Race from January 2019 to March 2020",
caption = "Source : Mass.gov",
x="",y="Percent (%)")
del2Draft
readRDS("del2Draft.rds")
# save del2Draft ----------------------------------------------------------
saveRDS(del2Draft, file = "del2Draft.rds")
del2Draft = Base + theme(axis.text.y = element_text(size=7,angle = 20)) +
geom_text(aes(label=ifelse(pctCol>5,# condition to annotate
pctCol,"")),
nudge_y = 4) +
labs(title= "MV : Most Common UCR Code among all Races",
subtitle = "Frequency of MA State Police Arrest Offense UCR Codes by Race from January 2019 to March 2020",
caption = "Source : Mass.gov",
x="",y="Percent (%)")
del2Draft
readRDS("del2Draft.rds")
# save del2Draft ----------------------------------------------------------
saveRDS(del2Draft, file = "del2Draft.rds")
#readRDS("del2Draft.rds")
readRDS("~/Desktop/MyDashboard/del2Draft.rds")
#readRDS("del2Draft.rds")
readRDS("~/Desktop/MyDashboard/del2Draft.rds")
#readRDS("del2Draft.rds")
readRDS("~/Desktop/MyDashboard/del2Draft.rds")
